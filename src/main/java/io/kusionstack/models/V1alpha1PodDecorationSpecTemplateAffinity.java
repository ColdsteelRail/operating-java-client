/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kusionstack.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kusionstack.models.V1alpha1PodDecorationSpecTemplateAffinityNodeSelectorTerms;
import io.kusionstack.models.V1alpha1PodDecorationSpecTemplateAffinityOverrideAffinity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * If specified, the pod&#39;s scheduling constraints
 */
@ApiModel(description = "If specified, the pod's scheduling constraints")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-22T06:24:47.231Z[Etc/UTC]")
public class V1alpha1PodDecorationSpecTemplateAffinity {
  public static final String SERIALIZED_NAME_NODE_SELECTOR_TERMS = "nodeSelectorTerms";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR_TERMS)
  private List<V1alpha1PodDecorationSpecTemplateAffinityNodeSelectorTerms> nodeSelectorTerms = null;

  public static final String SERIALIZED_NAME_OVERRIDE_AFFINITY = "overrideAffinity";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_AFFINITY)
  private V1alpha1PodDecorationSpecTemplateAffinityOverrideAffinity overrideAffinity;


  public V1alpha1PodDecorationSpecTemplateAffinity nodeSelectorTerms(List<V1alpha1PodDecorationSpecTemplateAffinityNodeSelectorTerms> nodeSelectorTerms) {
    
    this.nodeSelectorTerms = nodeSelectorTerms;
    return this;
  }

  public V1alpha1PodDecorationSpecTemplateAffinity addNodeSelectorTermsItem(V1alpha1PodDecorationSpecTemplateAffinityNodeSelectorTerms nodeSelectorTermsItem) {
    if (this.nodeSelectorTerms == null) {
      this.nodeSelectorTerms = new ArrayList<>();
    }
    this.nodeSelectorTerms.add(nodeSelectorTermsItem);
    return this;
  }

   /**
   * NodeSelectorTerms indicates the node selector to append into the existing requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.
   * @return nodeSelectorTerms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "NodeSelectorTerms indicates the node selector to append into the existing requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.")

  public List<V1alpha1PodDecorationSpecTemplateAffinityNodeSelectorTerms> getNodeSelectorTerms() {
    return nodeSelectorTerms;
  }


  public void setNodeSelectorTerms(List<V1alpha1PodDecorationSpecTemplateAffinityNodeSelectorTerms> nodeSelectorTerms) {
    this.nodeSelectorTerms = nodeSelectorTerms;
  }


  public V1alpha1PodDecorationSpecTemplateAffinity overrideAffinity(V1alpha1PodDecorationSpecTemplateAffinityOverrideAffinity overrideAffinity) {
    
    this.overrideAffinity = overrideAffinity;
    return this;
  }

   /**
   * Get overrideAffinity
   * @return overrideAffinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1PodDecorationSpecTemplateAffinityOverrideAffinity getOverrideAffinity() {
    return overrideAffinity;
  }


  public void setOverrideAffinity(V1alpha1PodDecorationSpecTemplateAffinityOverrideAffinity overrideAffinity) {
    this.overrideAffinity = overrideAffinity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1PodDecorationSpecTemplateAffinity v1alpha1PodDecorationSpecTemplateAffinity = (V1alpha1PodDecorationSpecTemplateAffinity) o;
    return Objects.equals(this.nodeSelectorTerms, v1alpha1PodDecorationSpecTemplateAffinity.nodeSelectorTerms) &&
        Objects.equals(this.overrideAffinity, v1alpha1PodDecorationSpecTemplateAffinity.overrideAffinity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeSelectorTerms, overrideAffinity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1PodDecorationSpecTemplateAffinity {\n");
    sb.append("    nodeSelectorTerms: ").append(toIndentedString(nodeSelectorTerms)).append("\n");
    sb.append("    overrideAffinity: ").append(toIndentedString(overrideAffinity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

