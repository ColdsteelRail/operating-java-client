/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kusionstack.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kusionstack.models.V1alpha1PodDecorationSpecUpdateStrategyRollingUpdateSelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RollingUpdate provides several ways to select Pods to update to target revision.
 */
@ApiModel(description = "RollingUpdate provides several ways to select Pods to update to target revision.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-22T06:24:47.231Z[Etc/UTC]")
public class V1alpha1PodDecorationSpecUpdateStrategyRollingUpdate {
  public static final String SERIALIZED_NAME_PARTITION = "partition";
  @SerializedName(SERIALIZED_NAME_PARTITION)
  private Integer partition;

  public static final String SERIALIZED_NAME_SELECTOR = "selector";
  @SerializedName(SERIALIZED_NAME_SELECTOR)
  private V1alpha1PodDecorationSpecUpdateStrategyRollingUpdateSelector selector;


  public V1alpha1PodDecorationSpecUpdateStrategyRollingUpdate partition(Integer partition) {
    
    this.partition = partition;
    return this;
  }

   /**
   * Partition controls the update progress by indicating how many pods should be updated. Partition value indicates the number of Pods which should be updated to the updated revision. Defaults to nil (all pods will be updated)
   * @return partition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Partition controls the update progress by indicating how many pods should be updated. Partition value indicates the number of Pods which should be updated to the updated revision. Defaults to nil (all pods will be updated)")

  public Integer getPartition() {
    return partition;
  }


  public void setPartition(Integer partition) {
    this.partition = partition;
  }


  public V1alpha1PodDecorationSpecUpdateStrategyRollingUpdate selector(V1alpha1PodDecorationSpecUpdateStrategyRollingUpdateSelector selector) {
    
    this.selector = selector;
    return this;
  }

   /**
   * Get selector
   * @return selector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1PodDecorationSpecUpdateStrategyRollingUpdateSelector getSelector() {
    return selector;
  }


  public void setSelector(V1alpha1PodDecorationSpecUpdateStrategyRollingUpdateSelector selector) {
    this.selector = selector;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1PodDecorationSpecUpdateStrategyRollingUpdate v1alpha1PodDecorationSpecUpdateStrategyRollingUpdate = (V1alpha1PodDecorationSpecUpdateStrategyRollingUpdate) o;
    return Objects.equals(this.partition, v1alpha1PodDecorationSpecUpdateStrategyRollingUpdate.partition) &&
        Objects.equals(this.selector, v1alpha1PodDecorationSpecUpdateStrategyRollingUpdate.selector);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partition, selector);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1PodDecorationSpecUpdateStrategyRollingUpdate {\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

